/*1. Дана строка 'aaa@bbb@ccc'. Замените все @ на ! с помощью глобального
поиска и замены.*/
 let str = 'aaa@bbb@ccc';

 console.log(str.replace(/@/g,'!' ));

 /*2. В переменной date лежит дата в формате 2025-12-31. Преобразуйте эту
 дату в формат 31/12/2025.*/
 

 let date = '2025-12-31';
// console.log(date.replace(/-/g, '/'));  //2025/12/31

let arr = date.split('-');
let newDate = arr[2] + '/' + arr[1] + '/' + arr[0];
console.log(newDate);
 
/* 3. Дана строка «Я учу javascript!». Вырежете из нее слово «учу» и слово
 «javascript» тремя разными способами (через substr, substring, slice).*/

 let str2 ='Я учу javascript!'
 console.log(str2.substring(2,5))

 let str3 = 'Я учу javascript!'
 console.log(str3.substr(2,4))

 let str4 = 'Я учу javascript!'
 console.log(str2.slice(2,5))
/* 4. Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите квадратный корень
 из суммы кубов его элементов. Для решения воспользуйтесь циклом for.*/
  let num = [ 4, 2, 5, 19, 13, 0, 10.]
  sum = 0;
  for (let i = 0; i < num.length; i++) {

    sum = sum + i 
    
  }
  console.log(Math.sqrt(sum))
 /*5. Даны переменные a и b. Отнимите от a переменную b и результат
 присвойте переменной c. Сделайте так, чтобы в любом случае в переменную
 c записалось положительное значение. Проверьте работу скрипта при a и b,
 равных соответственно 3 и 5, 6 и 1.*/
 
 /*6. Выведите на экран текущую дату-время в формате 12:59:59 31.12.2014.
 Для решения этой задачи напишите функцию, которая будет добавлять 0
 перед днями и месяцами, которые состоят из одной цифры (из 1.9.2014
 сделает 01.09.2014).*/

 let dateNow = new Date();

 let resDate = zero(dateNow.getDate()) + '.' + zero(dateNow.getMonth()+1) + '.' + dateNow.getFullYear();
 let numbers = zero(dateNow.getHours()) + ':' + zero(dateNow.getMinutes()+1) + ':' + dateNow.getSeconds()
 console.log(numbers + ' ' + resDate);


 function zero (num) {
    if (num <= 9) {
      return num = '0' + num;  
    } else {
        return num;
    }
}
 
 /*7. Дана строка 'aa aba abba abbba abca abea'. Напишите регулярку, которая
 найдет строки aba, abba, abbba по шаблону: буква 'a', буква 'b' любое
 количество раз, буква 'a'.*/
 let str7='aa aba abba abbba abca abea';
 let reg7=/ab{1,}a/gi; 
 console.log(str7.match(reg7));

 /*8. Напишите ф-цию строгой проверки ввода номер телефона в
 международном формате (<код страны> <код города или сети> <номер
 телефона>). Функция должна возвращать true или false. Используйте
 регулярные выражения.*/
 /* let chekNumber = function (number) {
       let regexp = /^+?([0-9]{2,4})?[()-.]?([0-9]{2,3})?[()-.]?([0-9]{5,7})$/gi;
        let chek = regexp.test(number); 
         if (chek) {
             return true;
       }
         else{return false;} 
     }
     console.log(chekNumber(phone));*/
 
 /*9. Напишите ф-цию строгой проверки адреса эл. почты с учетом следующих
 условия:
     - весь адрес не должен содержать русские буквы и спецсимволы, кроме
     одной «собачки», знака подчеркивания, дефиса и точки;
     - имя эл. почты (до знака @) должно быть длиной более 2 символов, причем
     имя может содержать только буквы, цифры, но не быть первыми и
     единственными в имени;
     - после последней точки и после @, домен верхнего уровня (ru, by, com и т.п.)
     не может быть длиной менее 2 и более 11 символов.
    
     Функция должна возвращать true или false. Используйте регулярные
     выражения.*/

     let email = 'alEx_19-87@gm.com';

     let chekEmail = function (email) {
         let regexp = /^(([A-Za-z]{1}[-0-9A-z.]{1,})@([-0-9A-Za-z]{2,11}.)[-A-Za-z]{2,11})$/gi;
         let chek = regexp.test(email); 
         if (chek) {
             return true;
         }
         else{return false;} 
     }
     console.log(chekEmail(email));
         
         
     

/*let email = 'galkevicnadezda18@gmail.'
let regexp = /[a-z 0-9]@[a-z].[a-z]{2,11}/gi;
console.log(regexp.test(email));*/


 
 /*10. Вам дана Grid таблица состоящая из массивов, в которых лежат буквы, а также массив с картой чисел, который поможет составить слово из этой Grid таблицы, например: 
 
     ```
      Grid таблица: 
     
      [
          ['m', 'y', 'e'], 
          ['x', 'a', 'm'], 
          ['p', 'l', 'e']
      ]
      
      карта чисел: 
      
      [1, 3, 5, 8]
      
     ```
     Создайте единый массив из Grid таблицы (можно при помощи метода .flat()) и по нему составьте слово пользуясь картой чисел, чтобы в результате получилось, например:
     
         ```
          'meal'
          
         ```
     Результат функции должен вернуть строку
     
     [kata](https://www.codewars.com/kata/5f5802bf4c2cc4001a6f859e/train/javascript)*/
     
 /*11. Здесь вам в аргументах даны 2 массива: 
     
     Нужно преобразовать каждый массив удалив в нем повторяющиеся числа.
     
     После чего склеить эти два массива, отсортировать и вернуть как результат
 
     [kata](https://www.codewars.com/kata/56d949281b5fdc7666000004/train/javascript)
     
 
 * Для быстрого составления регулярного выражения и проверки исп. онлайн-
 сервис https://regex101.com/.
 
 Для ввода значений можете использовать ф-цию prompt(), либо задавать
 значения при инициализации переменных в коде.
 Для вывода результатов скриптов вы можете использовать функции: alert()
 для вывода всплывающего окна; console.log() для вывода в консоль браузера;
 document.write() для вывода в «тело» HTML-документа.*/